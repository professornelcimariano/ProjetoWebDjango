"""
Django settings for setup project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path, os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_(f%b+jp7b0&tji9dgn7ih+a93rt+u!jz@)6onh%%e(0_gjn09'

# SECURITY WARNING: don't run with debug turned on in production!

# DEBUG = True -> Modo de Desenvolvimento
# DEBUG = False -> Modo de Produção
DEBUG = True
#ALLOWED_HOSTS = []
#Quando o DEBUG For False o Django irá procurar o arquivo index.html, e aí tem que ter a permissão no ALLOWED_HOST
#DEBUG = False
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_bootstrap5',
    'tinymce',
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'setup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'setup.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

#LANGUAGE_CODE = 'en-us'
#TIME_ZONE = 'UTC'
LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

#STATIC_URL = 'static/' é usado no Modo de Desenvolvimento
STATIC_URL = 'static/'
#No modo de Produção é usado a constante abaixo "STATIC_ROOT"
#Produção ou Desenvolvimento -> Vai depender do DEBUG
#Criação da Constante STATIC_ROOT (Não vem no framewor, tem que criar)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

#Configuração para cadastro de imagens na raiz do projeto
#opção 1

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

'''
#opção 2 - Inserir as imagens cadastradas no admin dentro do app core/static/images
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'core/static')
'''
'''
"MEDIA_URL" e "MEDIA_ROOT" são configurações usadas para gerenciar arquivos de mídia, como imagens e documentos, que os usuários fazem upload para o seu site.
"MEDIA_URL": Define a URL base através da qual os arquivos de mídia podem ser acessados no navegador. No seu exemplo, MEDIA_URL = '/media/' significa que os arquivos de mídia podem ser acessados através de URLs que começam com /media/. Por exemplo, se um arquivo chamado image.jpg for carregado, ele pode ser acessado via http://example.com/media/image.jpg.
"MEDIA_ROOT": Define o caminho absoluto no sistema de arquivos onde os arquivos de mídia serão armazenados. No seu exemplo, MEDIA_ROOT = os.path.join(BASE_DIR, 'core/static') define o diretório no sistema de arquivos onde os arquivos de mídia são armazenados. O BASE_DIR é a raiz do seu projeto Django, então MEDIA_ROOT está apontando para um diretório chamado static dentro de um diretório core.
'''

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


TINYMCE_DEFAULT_CONFIG = {
    'height': 700,  # Altere a altura conforme necessário
    'width': '100%',   # Altere a largura conforme necessário
    'plugins': 'textcolor link image lists code',
    'toolbar': 'undo redo | formatselect | bold italic backcolor | \
                alignleft aligncenter alignright alignjustify | \
                bullist numlist outdent indent | removeformat | help',
}